-- PostgreSQL database dump

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';
SET default_table_access_method = heap;

-- Tabela: compras
CREATE TABLE public.compras (
                                id bigint NOT NULL,
                                quantidade integer NOT NULL,
                                total double precision NOT NULL,
                                data_compra timestamp(6) without time zone NOT NULL,
                                ingresso_id bigint NOT NULL,
                                comprador_email character varying(255) NOT NULL,
                                comprador_nome character varying(255) NOT NULL
);

-- Sequência de ID
ALTER TABLE public.compras ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.compras_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Chave Primária
ALTER TABLE ONLY public.compras
    ADD CONSTRAINT compras_pkey PRIMARY KEY (id);

-- Chave Estrangeira
ALTER TABLE ONLY public.compras
    ADD CONSTRAINT fka2lj80ifecq9kfhlks9dm9bqu FOREIGN KEY (ingresso_id) REFERENCES public.ingressos(id);

-- Tabela: datas_evento
CREATE TABLE public.datas_evento (
                                     data date NOT NULL,
                                     evento_id bigint NOT NULL
);

-- Chave Estrangeira
ALTER TABLE ONLY public.datas_evento
    ADD CONSTRAINT fkq264nec22ry8w859i0qcrowt0 FOREIGN KEY (evento_id) REFERENCES public.eventos(id);

-- Tabela: eventos
CREATE TABLE public.eventos (
                                id bigint NOT NULL,
                                capacidade integer NOT NULL,
                                descricao character varying(500) NOT NULL,
                                local character varying(255) NOT NULL,
                                nome character varying(255) NOT NULL
);

-- Sequência de ID
ALTER TABLE public.eventos ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.eventos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Chave Primária
ALTER TABLE ONLY public.eventos
    ADD CONSTRAINT eventos_pkey PRIMARY KEY (id);

-- Tabela: ingressos
CREATE TABLE public.ingressos (
                                  id bigint NOT NULL,
                                  tipo character varying(255) NOT NULL,
                                  preco double precision NOT NULL,
                                  status character varying(255) NOT NULL,
                                  evento_id bigint NOT NULL,
                                  data date NOT NULL,
                                  quantidade integer NOT NULL,
                                  restricaoPublico character varying(255) NOT NULL
);

-- Sequência de ID
ALTER TABLE public.ingressos ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.ingressos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Chave Primária
ALTER TABLE ONLY public.ingressos
    ADD CONSTRAINT ingressos_pkey PRIMARY KEY (id);

-- Chave Estrangeira
ALTER TABLE ONLY public.ingressos
    ADD CONSTRAINT fkl3937ng8d4p2qfd17l9d9v4va FOREIGN KEY (evento_id) REFERENCES public.eventos(id);

-- Dados de exemplo para a tabela compras
COPY public.compras (quantidade, total, data_compra, id, ingresso_id, comprador_email, comprador_nome) FROM stdin;
3	120	2025-01-15 09:30:00	6	3	juliana.souza@email.com	Juliana Souza
2	75	2025-01-16 14:00:00	7	4	roberto.costa@email.com	Roberto Costa
4	200	2025-01-18 10:30:00	8	2	claudia.martins@email.com	Claudia Martins
1	90	2025-01-20 11:00:00	9	1	leonardo.silva@email.com	Leonardo Silva
\.

-- Dados de exemplo para a tabela datas_evento
COPY public.datas_evento (data, evento_id) FROM stdin;
2025-02-01	1
2025-02-03	2
2025-02-08	3
2025-02-09	4
2025-02-10	5
\.

-- Dados de exemplo para a tabela eventos
COPY public.eventos (capacidade, id, descricao, local, nome) FROM stdin;
1500	1	"Show de rock com bandas nacionais e internacionais."	"Estádio Municipal"	"Festival de Rock"
800	2	"Peça de teatro clássica que promete emocionar a plateia."	"Teatro Imperial"	"Teatro Clássico"
1000	3	"Exposição de arte contemporânea com artistas de todo o mundo."	"Centro Cultural"	"Arte Contemporânea"
500	4	"Apresentação de dança moderna e balé."	"Teatro das Artes"	"Dança Moderna"
2000	5	"Evento de gastronomia com chefs renomados e oficinas."	"Centro de Convenções"	"Gastronomia Gourmet"
\.

-- Dados de exemplo para a tabela ingressos
COPY public.ingressos (data, preco, quantidade, evento_id, id, status, tipo, restricaoPublico) FROM stdin;
2025-02-01	80	150	1	2	Disponível	Padrão	Estudante
2025-02-01	200	50	1	3	Disponível	VIP	Profissional
2025-02-03	60	100	2	4	Disponível	Padrão	Idoso
2025-02-03	180	0	2	5	Esgotado	VIP	PCD
2025-02-08	50	200	3	6	Disponível	Padrão	Estudante
2025-02-08	150	100	3	7	Disponível	VIP	Profissional
2025-02-09	70	150	4	8	Disponível	Padrão	Idoso
2025-02-09	180	50	4	9	Disponível	VIP	PCD
2025-02-10	100	200	5	10	Disponível	Padrão	Estudante
2025-02-10	250	50	5	11	Disponível	VIP	Profissional
\.

-- Atualização das Sequências
SELECT pg_catalog.setval('public.compras_id_seq', 9, true);
SELECT pg_catalog.setval('public.eventos_id_seq', 5, true);
SELECT pg_catalog.setval('public.ingressos_id_seq', 11, true);

--
-- PostgreSQL database dump complete
--
